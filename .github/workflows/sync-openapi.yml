name: Sync OpenAPI Spec to Client

# どのタイミングで発火するか
on:
  # masterブランチにマージされた時、openapi-spec配下が変更されていた場合、下記のjobsを実行する
  push:
    branches:
      - master
    paths:
      - 'openapi-spec/**'

jobs:
  backend-generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get current time (for branch)
        id: datetime
        run: echo "now=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get commit message
        id: commitmsg
        run: |
          first_line=$(echo "${{ github.event.head_commit.message }}" | head -n1)
          sanitized=$(echo "$first_line" | sed -E 's/\s*\(#([0-9]+)\)//')
          echo "title=$sanitized" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-

      - name: Run Maven build (Java + npm codegen)
        # generated-sourcesでnpm側のスクリプトも実行する
        run: |
          cd backend
          mvn generate-sources

      # githubpages用にupload
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/index.html

      - name: Create PR (backend)
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "update: generated-sources(${{ steps.commitmsg.outputs.title }})"
          branch: feature/update-generated-sources-${{ steps.datetime.outputs.now }}
          title: "update: generated-sources (${{ steps.commitmsg.outputs.title }})"
          body: |
            apiとmodelのコードを自動生成しました。
            ${{ steps.commitmsg.outputs.title }}
            作成時刻：${{ steps.datetime.outputs.now }}

  sync-front:
    runs-on: ubuntu-latest
    needs: backend-generate
    steps:
      - uses: actions/checkout@v4
      - name: Get current time (for branch)
        id: datetime
        run: echo "now=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get commit message
        id: commitmsg
        run: |
          first_line=$(echo "${{ github.event.head_commit.message }}" | head -n1)
          sanitized=$(echo "$first_line" | sed -E 's/\s*\(#([0-9]+)\)//')
          echo "title=$sanitized" >> $GITHUB_OUTPUT

      - name: Checkout React repo
        uses: actions/checkout@v4
        with:
          repository: Lelouch3141/openapi-githubactions-sample
          token: ${{ secrets.GH_PAT }}
          path: react-repo

      - name: Copy OpenAPI spec (front)
        run: |
          rm -rf react-repo/openapi-spec
          mkdir -p react-repo/openapi-spec
          cp -r openapi-spec/dist/* react-repo/openapi-spec/

      - name: Generate code (front)
        run: |
          cd react-repo/frontend
          npm i
          npm run generate-code

      - name: Create PR (front)
        uses: peter-evans/create-pull-request@v6
        with:
          path: react-repo
          token: ${{ secrets.GH_PAT }}
          commit-message: "update: openapi/generate(${{ steps.commitmsg.outputs.title }})"
          branch: feature/update-openapi-${{ steps.datetime.outputs.now }}
          title: "update: openapi (${{ steps.commitmsg.outputs.title }})"
          body: |
            openapiの定義更新を行い、apiとmodelのコードを自動生成しました。
            ${{ steps.commitmsg.outputs.title }}
            作成時刻：${{ steps.datetime.outputs.now }}

  deploy:
    runs-on: ubuntu-latest
    needs: backend-generate
    # デプロイに必要な権限を付与
    permissions:
      pages: write
      id-token: write
    # デプロイ環境を指定
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4